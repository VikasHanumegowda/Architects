{"ast":null,"code":"import _objectSpread from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/adithya/college/Science_Gateway/Architects/ui-module/src/containers/Register/Register.js\";\nimport React, { Component } from 'react';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Axios from 'axios';\nimport SERVER_URL from '../../static/Config/Config';\nimport classes from './Register.css';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      addProjectForm: {\n        firstName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'First Name'\n          },\n          value: ''\n        },\n        lastName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Last Name'\n          },\n          value: ''\n        },\n        userName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'User Name'\n          },\n          value: ''\n        },\n        password: {\n          elementType: 'password',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: ''\n        },\n        skills: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Skills'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Email'\n          },\n          value: ''\n        },\n        contactNumber: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Contact Number'\n          },\n          value: ''\n        },\n        userType: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'Select',\n              displayValue: 'select'\n            }, {\n              value: 'freeLancer',\n              displayValue: 'Free Lancer'\n            }, {\n              value: 'organization',\n              displayValue: 'Organization'\n            }]\n          },\n          value: ''\n        }\n      }\n    };\n\n    _this.registerHandler = function (event) {\n      event.preventDefault();\n      var formData = {};\n\n      for (var formElementIdentifier in _this.state.addProjectForm) {\n        formData[formElementIdentifier] = _this.state.addProjectForm[formElementIdentifier].value;\n      }\n\n      console.log(formData);\n      Axios.post(SERVER_URL + '/register', formData).then(function (response) {\n        console.log(\"data posted\");\n\n        _this.setState({\n          snackbarMessage: \"Registration Sucessful\"\n        });\n\n        _this.setState({\n          showSnackbar: true\n        });\n\n        window.location.assign(\"/\");\n      }).catch(function (error) {\n        console.log(res.data);\n\n        _this.setState({\n          snackbarMessage: \"Could not register\"\n        });\n\n        _this.setState({\n          showSnackbar: true\n        });\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      var updatedOrderForm = _objectSpread({}, _this.state.addProjectForm);\n\n      var updatedFormElement = _objectSpread({}, updatedOrderForm[inputIdentifier]);\n\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n      _this.setState({\n        addProjectForm: updatedOrderForm\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.addProjectForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.addProjectForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        onSubmit: this.registerHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        btnType: \"Success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Register\"));\n      return React.createElement(\"div\", {\n        className: classes.RegisterForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Join our family\"), form);\n    }\n  }]);\n\n  return Register;\n}(Component); // Checkout.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\n\nexport default Register;","map":{"version":3,"sources":["/home/adithya/college/Science_Gateway/Architects/ui-module/src/containers/Register/Register.js"],"names":["React","Component","Input","Button","Axios","SERVER_URL","classes","Register","state","addProjectForm","firstName","elementType","elementConfig","type","placeholder","value","lastName","userName","password","skills","email","contactNumber","userType","options","displayValue","registerHandler","event","preventDefault","formData","formElementIdentifier","console","log","post","then","response","setState","snackbarMessage","showSnackbar","window","location","assign","catch","error","res","data","loading","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","key","push","id","config","form","map","formElement","RegisterForm"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Input from '../../components/Input/Input'\nimport Button from '../../components/Button/Button'\nimport Axios from 'axios'\nimport SERVER_URL from '../../static/Config/Config'\nimport classes from './Register.css'\n\n\nclass Register extends Component {\n  state = {\n    addProjectForm: {\n        firstName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'First Name'\n            },\n            value: ''\n        },\n        lastName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Last Name'\n            },\n            value: ''\n        },\n        userName: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'User Name'\n            },\n            value: ''\n        },\n        password: {\n            elementType: 'password',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Password'\n            },\n            value: ''\n        },\n        skills: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Skills'\n            },\n            value: ''\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Email'\n            },\n            value: ''\n        },\n        contactNumber: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Contact Number'\n            },\n            value: ''\n        },\n        userType: {\n            elementType: 'select',\n            elementConfig: {\n                options: [\n                    {value: 'Select', displayValue: 'select'},\n                    {value: 'freeLancer', displayValue: 'Free Lancer'},\n                    {value: 'organization', displayValue: 'Organization'}\n                ]\n            },\n            value: ''\n        }\n    }\n  }\n\n  registerHandler = (event) => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementIdentifier in this.state.addProjectForm) {\n        formData[formElementIdentifier] = this.state.addProjectForm[formElementIdentifier].value;\n    }\n    console.log(formData);\n    Axios.post(SERVER_URL + '/register', formData)\n        .then(response => {\n            console.log(\"data posted\")\n            this.setState({\n                snackbarMessage: \"Registration Sucessful\"\n            });\n            this.setState({ showSnackbar: true });\n            window.location.assign(\"/\")\n        })\n        .catch(error => {\n            console.log(res.data);\n            this.setState({\n                snackbarMessage: \"Could not register\"\n            });\n            this.setState({ showSnackbar: true });\n            this.setState({ loading: false });\n        });\n}\n\ninputChangedHandler = (event, inputIdentifier) => {\n    const updatedOrderForm = {\n        ...this.state.addProjectForm\n    };\n    const updatedFormElement = {\n        ...updatedOrderForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n    this.setState({ addProjectForm: updatedOrderForm });\n}\n\n  render() {\n    const formElementsArray = [];\n        for (let key in this.state.addProjectForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.addProjectForm[key]\n            });\n        }\n        \n        let form = (\n          <form onSubmit={this.registerHandler}>\n              {formElementsArray.map(formElement => (\n                  <Input\n                      key={formElement.id}\n                      elementType={formElement.config.elementType}\n                      elementConfig={formElement.config.elementConfig}\n                      value={formElement.config.value}\n                      changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n              ))}\n              <Button btnType=\"Success\">Register</Button>\n          </form>\n      );\n\n    return (\n      <div className={classes.RegisterForm}>\n        <h4>Join our family</h4>\n      {form}\n  </div>\n    );\n  }\n}\n\n// Checkout.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}