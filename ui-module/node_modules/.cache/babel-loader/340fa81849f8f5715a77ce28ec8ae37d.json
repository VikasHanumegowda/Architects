{"ast":null,"code":"import _objectSpread from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/adithya/college/Science_Gateway/Architects/ui-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/adithya/college/Science_Gateway/Architects/ui-module/src/containers/Register/Register.js\";\nimport React, { Component } from 'react';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Axios from 'axios';\nimport SERVER_URL from '../../static/Config/Config';\nimport classes from './Register.css';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      addProjectForm: {\n        firstName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'First Name : must be between 3 and 30 characters'\n          },\n          value: ''\n        },\n        lastName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Last Name : must be between 3 and 30 characters'\n          },\n          value: ''\n        },\n        userName: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'User Name : must be between 3 and 30 characters'\n          },\n          value: ''\n        },\n        password: {\n          elementType: 'password',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password : must be between 6 and 30 characters '\n          },\n          value: ''\n        },\n        skills: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Skills : Enter comma seperated skills'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Email : Enter a valid email ID'\n          },\n          value: ''\n        },\n        contactNumber: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Contact Number : Enter a valid contact Number'\n          },\n          value: ''\n        },\n        userType: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'Select',\n              displayValue: 'select'\n            }, {\n              value: 'freeLancer',\n              displayValue: 'Free Lancer'\n            }, {\n              value: 'organization',\n              displayValue: 'Organization'\n            }]\n          },\n          value: ''\n        }\n      },\n      errors: \"\"\n    };\n\n    _this.registerHandler = function (event) {\n      event.preventDefault();\n      var formData = {};\n\n      for (var formElementIdentifier in _this.state.addProjectForm) {\n        formData[formElementIdentifier] = _this.state.addProjectForm[formElementIdentifier].value;\n      }\n\n      console.log(formData);\n      Axios.post(SERVER_URL + '/register', formData).then(function (response) {\n        console.log(\"data posted\");\n\n        _this.setState({\n          snackbarMessage: \"Registration Sucessful\"\n        });\n\n        _this.setState({\n          showSnackbar: true\n        });\n\n        window.location.assign(\"/\");\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.setState({\n          snackbarMessage: \"Could not register\"\n        });\n\n        _this.setState({\n          showSnackbar: true\n        });\n\n        _this.setState({\n          loading: false\n        });\n\n        _this.setState({\n          errors: \"Invaild Data entered\"\n        });\n      });\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      var updatedOrderForm = _objectSpread({}, _this.state.addProjectForm);\n\n      var updatedFormElement = _objectSpread({}, updatedOrderForm[inputIdentifier]);\n\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n      _this.setState({\n        addProjectForm: updatedOrderForm\n      });\n\n      _this.setState({\n        errors: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errors = this.state.errors;\n      var formElementsArray = [];\n\n      for (var key in this.state.addProjectForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.addProjectForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        onSubmit: this.registerHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        btnType: \"Success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Register\"));\n      return React.createElement(\"div\", {\n        className: classes.RegisterForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, errors), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Join our family\"), form);\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/home/adithya/college/Science_Gateway/Architects/ui-module/src/containers/Register/Register.js"],"names":["React","Component","Input","Button","Axios","SERVER_URL","classes","Register","state","addProjectForm","firstName","elementType","elementConfig","type","placeholder","value","lastName","userName","password","skills","email","contactNumber","userType","options","displayValue","errors","registerHandler","event","preventDefault","formData","formElementIdentifier","console","log","post","then","response","setState","snackbarMessage","showSnackbar","window","location","assign","catch","error","loading","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","key","push","id","config","form","map","formElement","RegisterForm","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../../components/Input/Input'\nimport Button from '../../components/Button/Button'\nimport Axios from 'axios'\nimport SERVER_URL from '../../static/Config/Config'\nimport classes from './Register.css'\n\n\nclass Register extends Component {\n    state = {\n        addProjectForm: {\n            firstName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'First Name : must be between 3 and 30 characters'\n                },\n                value: ''\n            },\n            lastName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Last Name : must be between 3 and 30 characters'\n                },\n                value: ''\n            },\n            userName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'User Name : must be between 3 and 30 characters'\n                },\n                value: ''\n            },\n            password: {\n                elementType: 'password',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password : must be between 6 and 30 characters '\n                },\n                value: ''\n            },\n            skills: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Skills : Enter comma seperated skills'\n                },\n                value: ''\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Email : Enter a valid email ID'\n                },\n                value: ''\n            },\n            contactNumber: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Contact Number : Enter a valid contact Number'\n                },\n                value: ''\n            },\n            userType: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'Select', displayValue: 'select' },\n                        { value: 'freeLancer', displayValue: 'Free Lancer' },\n                        { value: 'organization', displayValue: 'Organization' }\n                    ]\n                },\n                value: ''\n            }\n        },\n        errors: \"\"\n    }\n\n    registerHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for (let formElementIdentifier in this.state.addProjectForm) {\n            formData[formElementIdentifier] = this.state.addProjectForm[formElementIdentifier].value;\n        }\n        console.log(formData);\n        Axios.post(SERVER_URL + '/register', formData)\n            .then(response => {\n                console.log(\"data posted\")\n                this.setState({\n                    snackbarMessage: \"Registration Sucessful\"\n                });\n                this.setState({ showSnackbar: true });\n                window.location.assign(\"/\")\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({\n                    snackbarMessage: \"Could not register\"\n                });\n                this.setState({ showSnackbar: true });\n                this.setState({ loading: false });\n                this.setState({ errors: \"Invaild Data entered\" });\n            });\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.addProjectForm\n        };\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        this.setState({ addProjectForm: updatedOrderForm });\n        this.setState({ errors: \"\" });\n    }\n\n    render() {\n        const { errors } = this.state\n        const formElementsArray = [];\n        for (let key in this.state.addProjectForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.addProjectForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.registerHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\">Register</Button>\n            </form>\n        );\n\n        return (\n\n            <div className={classes.RegisterForm}>\n                <div style={{ color: \"red\" }}>\n                    {errors}\n                </div>\n\n                <h4>Join our family</h4>\n                {form}\n            </div>\n\n        );\n    }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}